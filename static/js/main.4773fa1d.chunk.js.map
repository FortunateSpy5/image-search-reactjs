{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","setState","className","this","type","name","placeholder","value","onChange","target","trimStart","React","Component","ImageCard","setSpans","spans","imageRef","current","clientHeight","createRef","addEventListener","window","debounce","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","display","images","map","key","id","length","getImages","App","foundMessage","onSearchSubmit","a","unsplash","get","params","query","response","data","results","console","log","message","paddingTop","ReactDOM","render","document","querySelector"],"mappings":"yTAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,2DC0BJC,E,4MA5BbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,MAC/B,EAAKM,SAAS,CAAEN,KAAM,M,uDAGd,IAAD,OACP,OACE,yBAAKO,UAAU,cACb,0BAAMA,UAAU,UAAUF,SAAUG,KAAKP,cACvC,yBAAKM,UAAU,SACb,+CACA,2BACEE,KAAK,OACLC,KAAK,SACLC,YAAY,SACZC,MAAOJ,KAAKT,MAAMC,KAClBa,SAAU,SAACX,GAAD,OAAW,EAAKI,SAAS,CAAEN,KAAME,EAAMY,OAAOF,MAAMG,wB,GApBpDC,IAAMC,WCuCfC,G,wDArCb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAURe,SAAW,WACT,IAAMC,EAAQ,EAAKC,SAASC,QAAQC,aACpC,EAAKjB,SAAS,CAAEc,MAAOA,KAXvB,EAAKrB,MAAQ,CAAEqB,MAAO,GACtB,EAAKC,SAAWL,IAAMQ,YAHL,E,gEAOjBhB,KAAKa,SAASC,QAAQG,iBAAiB,OAAQjB,KAAKW,UACpDO,OAAOD,iBAAiB,SAAUjB,KAAKmB,SAASnB,KAAKW,SAAU,O,+BAQxDS,EAAIC,GAAK,IACZC,EADW,mBAEf,OAAO,SAACC,GACNC,aAAaF,GACbA,EAAQG,YAAW,SAACF,GAClBD,EAAQ,KACRF,EAAGM,MAAM,EAAMC,KACdN,M,+BAIG,IAAD,EACuBrB,KAAKJ,MAAMgC,MAAjCC,EADD,EACCA,YAAaC,EADd,EACcA,KACrB,OACE,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUhC,KAAKT,MAAMqB,SAC3C,yBAAKqB,IAAKjC,KAAKa,SAAUqB,IAAKL,EAAaM,IAAKL,EAAKM,e,GAhCrC5B,IAAMC,YC0Bf4B,G,kNAxBb9C,MAAQ,CAAE+C,QAAS,CAACA,QAAS,S,0DAI3B,OAAOtC,KAAKJ,MAAM2C,OAAOC,KAAI,SAACZ,GAC5B,OAAO,kBAAC,EAAD,CAAWa,IAAKb,EAAMc,GAAId,MAAOA,S,2CAKtC5B,KAAKJ,MAAM2C,OAAOI,OAAS,GAAoC,SAA/B3C,KAAKT,MAAM+C,QAAQA,SACrDtC,KAAKF,SAAS,CAACwC,QAAS,O,+BAK1B,OACE,yBAAKvC,UAAU,aAAagC,MAAO/B,KAAKT,MAAM+C,SAC3CtC,KAAK4C,iB,GAnBUpC,IAAMC,YCkCfoC,E,4MAhCbtD,MAAQ,CACNgD,OAAQ,GACRO,aAAc,I,EAGfC,e,uCAAiB,WAAOvD,GAAP,eAAAwD,EAAA,+EAESC,EAASC,IAAK,iBAAkB,CACrDC,OAAQ,CAAEC,MAAO5D,KAHL,OAER6D,EAFQ,OAMd,EAAKvD,SAAS,CAAEyC,OAAQc,EAASC,KAAKC,UACtC,EAAKzD,SAAS,CACZgD,aAAa,SAAD,OAAW,EAAKvD,MAAMgD,OAAOI,OAA7B,aARA,gDAYda,QAAQC,IAAI,KAAMC,SAZJ,yD,6GAiBhB,OACE,yBAAK3D,UAAU,eAAegC,MAAO,CAAE4B,WAAY,SACjD,kBAAC,EAAD,CAAW9D,SAAUG,KAAK+C,iBAC1B,2BAAI/C,KAAKT,MAAMuD,cACf,kBAAC,EAAD,CAAWP,OAAQvC,KAAKT,MAAMgD,c,GA3BpB/B,IAAMC,WCDxBmD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.4773fa1d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.unsplash.com',\r\n  headers: {\r\n    Authorization: \"Client-ID 8EjyvMwSklYrEd1YqP_uxltqPjimDJOHMQHhVuFOnQ8\",\r\n  }\r\n});","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: \"\" };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.term);\r\n    this.setState({ term: ''})\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n          <div className=\"field\">\r\n            <label>Search Image</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"search\"\r\n              placeholder=\"Search\"\r\n              value={this.state.term}\r\n              onChange={(event) => this.setState({ term: event.target.value.trimStart() })}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./ImageCard.css\";\r\n\r\nclass ImageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { spans: 1 };\r\n    this.imageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\r\n    window.addEventListener(\"resize\", this.debounce(this.setSpans, 50));\r\n  }\r\n\r\n  setSpans = () => {\r\n    const spans = this.imageRef.current.clientHeight;\r\n    this.setState({ spans: spans });\r\n  };\r\n\r\n  debounce(fn, ms) {\r\n    let timer;\r\n    return (_) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout((_) => {\r\n        timer = null;\r\n        fn.apply(this, arguments);\r\n      }, ms);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { description, urls } = this.props.image;\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n        <img ref={this.imageRef} alt={description} src={urls.regular} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport ImageCard from './ImageCard'\r\nimport \"./ImageList.css\";\r\n\r\nclass ImageList extends React.Component {\r\n  state = { display: {display: 'none'}}\r\n  \r\n  getImages() {\r\n  \r\n    return this.props.images.map((image) => {\r\n      return <ImageCard key={image.id} image={image} />\r\n    })\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    if (this.props.images.length > 0 && this.state.display.display === 'none') {\r\n      this.setState({display: {}});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"image-list\" style={this.state.display}>\r\n        {this.getImages()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\nimport unsplash from '../api/unsplash'\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    images: [],\r\n    foundMessage: ''\r\n  }\r\n\r\n   onSearchSubmit = async (term) => {\r\n    try {\r\n      const response = await unsplash.get( '/search/photos', {\r\n        params: { query: term }\r\n      });\r\n\r\n      this.setState({ images: response.data.results });\r\n      this.setState({\r\n        foundMessage: `Found ${this.state.images.length} Images`\r\n      });\r\n    }\r\n    catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ paddingTop: \"20px\" }}>\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <p>{this.state.foundMessage}</p>\r\n        <ImageList images={this.state.images} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n);"],"sourceRoot":""}